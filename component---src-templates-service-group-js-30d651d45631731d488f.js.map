{"version":3,"sources":["webpack:///./src/templates/serviceGroup.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/components/ofertTable.js"],"names":["serviceGroup","data","serviceGroupsJson","servicesList","allServicesJson","nodes","map","index","name","slug","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","linkTo","className","prize","time","style","height","fluid","image","childImageSharp","description","OfertTable","props","children","OfertTableRow","React","useState","isOpen","setIsOpen","isContentActive","setIsContentActive","ref","useRef","useLayoutEffect","innerContent","current","maxHeight","scrollHeight","backgroundColor","color","to","onClick","prev","drawerTime","getComputedStyle","transitionDuration","setTimeout","parseFloat","aria-label","colSpan"],"mappings":"yKA8DeA,UA/BM,YAAe,IAAZC,EAAW,EAAXA,KACdD,EAAeC,EAAKC,kBAEpBC,EAAeF,EAAKG,gBAAgBC,MAAMC,KAAI,WAA0BC,GAAW,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,KAASR,EClC3D,SAAuCS,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDsBmF,oBAEtF,OACE,kBAAC,IAAD,CAAeM,OAAM,YAAcX,EAAQG,IAAG,WAAaH,GAA3D,GACYD,EACJ,0BAAMa,UAAU,sBAAsBpB,EAAKqB,MAA3C,OACA,0BAAMD,UAAU,sBAAsBpB,EAAKsB,KAA3C,aAKZ,OAEI,kBAAC,IAAD,KACI,yBAAKF,UAAU,uBACX,4BAAKrB,EAAaQ,MAClB,yBAAKa,UAAU,oBACX,kBAAC,IAAD,CAAKG,MAAO,CAACC,OAAQ,QAASC,MAAO1B,EAAa2B,MAAMC,gBAAgBF,SAE5E,2BAAI1B,EAAa6B,aACjB,kBAAC,IAAD,KACK1B,O,kCEvDrB,yGAGa2B,EAAa,SAACC,GACvB,OACI,yBAAKV,UAAU,eACX,+BACI,+BACKU,EAAMC,aAOdC,EAAgB,SAACF,GAAW,IAAD,EAERG,IAAMC,UAAS,GAApCC,EAF6B,KAErBC,EAFqB,OAGUH,IAAMC,UAAS,GAAtDG,EAH6B,KAGZC,EAHY,KAK9BC,EAAMN,IAAMO,OAAO,MAEzBC,2BAAgB,WACZ,GAAIX,EAAMY,aAAa,CAEfH,EAAII,QAAQpB,MAAMqB,UAAYT,EAAYI,EAAII,QAAQE,aAAlB,KAAqC,SAInF,CAACV,EAAQL,EAAMY,eAWjB,OACI,oCACI,wBAAItB,UAAS,mBAAoBU,EAAMY,aAAe,wBAA0B,IAAnE,IAAyEZ,EAAMV,WACxF,wBAAIA,UAAS,iBAAoBG,MAAO,CAACuB,gBAAgB,IAAIhB,EAAMiB,MAAQjB,EAAMiB,MAAQ,QACrF,kBAAC,IAAD,CAAMC,GAAIlB,EAAMX,QACZ,yBAAKC,UAAU,oBACVU,EAAMC,YAIlBD,EAAMY,aACH,wBAAItB,UAAU,oBACV,4BACIA,UAAS,kBAAmBe,EAAS,wBAA0B,IAC/Dc,QAvBJ,WAEhB,GADAb,GAAU,SAAAc,GAAI,OAAKA,KACff,EAEG,CACH,IAAMgB,EAAaC,iBAAiBb,EAAII,SAASU,mBACjDC,YAAW,kBAAMhB,GAAmB,KAAiC,IAAzBiB,WAAWJ,SAHvDb,GAAmB,IAqBHkB,aAAW,eACd,uBAAGpC,UAAU,wBAEpB,MAELU,EAAMY,aACH,wBAAItB,UAAU,oBACV,wBAAIA,UAAU,mBAAmBqC,QAAS,GACtC,yBAAKrC,UAAS,wBAAyBe,EAAS,qBAAuB,IAAMI,IAAKA,GAC9E,2BAAOnB,UAAU,eACb,+BACKiB,EAAkBP,EAAMY,aAAe,UAM9D","file":"component---src-templates-service-group-js-30d651d45631731d488f.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nimport Layout from \"../components/layout\"\r\nimport { OfertTable, OfertTableRow} from \"../components/ofertTable\"\r\n\r\nexport const query = graphql`\r\n    query($slug: String!) {\r\n        serviceGroupsJson(slug: { eq: $slug }) {\r\n            name\r\n            description\r\n            image {\r\n                childImageSharp {\r\n                    fluid {\r\n                        ...GatsbyImageSharpFluid\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        allServicesJson(filter: {group: {eq: $slug}}) {\r\n            nodes {\r\n                name\r\n                prize\r\n                slug\r\n                time\r\n                description1\r\n            }\r\n        }\r\n    }\r\n`\r\nconst serviceGroup = ({ data }) => {\r\n    const serviceGroup = data.serviceGroupsJson\r\n  \r\n    const servicesList = data.allServicesJson.nodes.map(({ name, slug, ...data }, index) => {\r\n  \r\n      return (\r\n        <OfertTableRow linkTo={`/service/${slug}`} key={`service ${slug}`}>\r\n                {`${name}`}\r\n                <span className=\"service-data-table\">{data.prize} z≈Ç</span>\r\n                <span className=\"service-data-table\">{data.time} min </span> \r\n        </OfertTableRow>\r\n      )\r\n    })\r\n\r\n    return (\r\n        \r\n        <Layout>\r\n            <div className=\"main-container-text\">\r\n                <h1>{serviceGroup.name}</h1>\r\n                <div className=\"services-picture\">\r\n                    <Img style={{height: \"100%\"}} fluid={serviceGroup.image.childImageSharp.fluid}/>\r\n                </div>\r\n                <p>{serviceGroup.description}</p>\r\n                <OfertTable>\r\n                    {servicesList}\r\n                </OfertTable>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default serviceGroup","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useLayoutEffect } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nexport const OfertTable = (props) => {\r\n    return (\r\n        <div className=\"ofert-table\">\r\n            <table>\r\n                <tbody>\r\n                    {props.children}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const OfertTableRow = (props) => {\r\n\r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n    const [isContentActive, setIsContentActive] = React.useState(false)\r\n\r\n    const ref = React.useRef(null)\r\n\r\n    useLayoutEffect(() => {\r\n        if (props.innerContent){\r\n            const setInnerHeight = () => {\r\n                ref.current.style.maxHeight = isOpen ? `${ref.current.scrollHeight}px` : \"0px\"\r\n            }\r\n            setInnerHeight()        \r\n        }\r\n    },[isOpen, props.innerContent])\r\n\r\n    const handleClick = () => {\r\n        setIsOpen(prev => !prev)\r\n        if(!isOpen){\r\n            setIsContentActive(true)\r\n        } else {\r\n            const drawerTime = getComputedStyle(ref.current).transitionDuration\r\n            setTimeout(() => setIsContentActive(false), parseFloat(drawerTime) * 1000)\r\n        } \r\n    }\r\n    return (\r\n        <>\r\n            <tr className={`ofert-table-tr ${props.innerContent ? \"ofert-table-tr-header\" : \"\"} ${props.className}`}>\r\n                <td className={`ofert-table-td`} style={{backgroundColor: `${props.color ? props.color : null}`}}>{/* style={{backgroundColor: props.color, padding: `10px 10px 10px ${indent ? indent : 20}px`}} */}\r\n                    <Link to={props.linkTo}>\r\n                        <div className=\"ofert-table-link\">\r\n                            {props.children}\r\n                        </div>\r\n                    </Link>\r\n                </td>\r\n                {props.innerContent ? \r\n                    <td className=\"drawer-button-td\">\r\n                        <button \r\n                            className={`drawer-button ${isOpen ? \"drawer-button-rotated\" : \"\"}`}\r\n                            onClick={handleClick}\r\n                            aria-label=\"open drawer\"\r\n                        ><i className=\"fas fa-caret-down\"></i></button>\r\n                    </td>\r\n                : null}\r\n            </tr>\r\n            {props.innerContent ?\r\n                <tr className=\"inner-content-tr\">\r\n                    <td className=\"inner-content-td\" colSpan={2}>\r\n                        <div className={`inner-content-close ${isOpen ? \"inner-content-open\" : \"\"}`} ref={ref}>\r\n                            <table className=\"inner-table\">\r\n                                <tbody>\r\n                                    {isContentActive ? props.innerContent : null}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            : null}\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}