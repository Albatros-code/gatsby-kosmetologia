{"version":3,"sources":["webpack:///./src/pages/oferta.js","webpack:///./src/components/ofertTable.js"],"names":["oferta","data","groupServices","allServiceGroupsJson","edges","map","edge","node","groupServicesList","index","serviceGroupSlug","servicesList","name","slug","innerContent","allServicesJson","nodes","service","group","linkTo","key","activePage","className","style","maxWidth","OfertTable","props","children","OfertTableRow","React","useState","isOpen","setIsOpen","isContentActive","setIsContentActive","ref","useRef","useLayoutEffect","current","maxHeight","scrollHeight","backgroundColor","color","to","onClick","prev","drawerTime","getComputedStyle","transitionDuration","setTimeout","parseFloat","aria-label","colSpan"],"mappings":"6FAAA,wDAqDeA,UA/CA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEVC,EAAgBD,EAAKE,qBAAqBC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAqBjEC,EAAoBN,EAAcG,KAAI,WAAiBI,GAAW,IAnBtDC,EACVC,EAkBuCC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAC7CC,GApBUJ,EAoBcG,EAnBxBF,EAAeV,EAAKc,gBAAgBC,MAAMX,KAAI,SAACY,EAASR,GAC5D,OAAIQ,EAAQC,QAAUR,EAElB,kBAAC,IAAD,CAAeS,OAAM,YAAcF,EAAQJ,KAAQO,IAAKH,EAAQJ,KAAOJ,GACpEQ,EAAQL,MAIR,QAIP,oCACGD,IAQL,OACE,kBAAC,IAAD,CAAeQ,OAAM,iBAAmBN,EAAQC,aAAcA,EAAcM,IAAKX,EAAQI,GACtFD,MAKP,OACE,kBAAC,IAAD,CAAQS,WAAW,UACf,yBAAKC,UAAU,uBACb,sCACA,8LACA,kBAAC,IAAD,CAAYC,MAAO,CAACC,SAAU,UAC3BhB,O,kCC7Cb,yGAGaiB,EAAa,SAACC,GACvB,OACI,yBAAKJ,UAAU,eACX,+BACI,+BACKI,EAAMC,aAOdC,EAAgB,SAACF,GAAW,IAAD,EAERG,IAAMC,UAAS,GAApCC,EAF6B,KAErBC,EAFqB,OAGUH,IAAMC,UAAS,GAAtDG,EAH6B,KAGZC,EAHY,KAK9BC,EAAMN,IAAMO,OAAO,MAEzBC,2BAAgB,WACZ,GAAIX,EAAMZ,aAAa,CAEfqB,EAAIG,QAAQf,MAAMgB,UAAYR,EAAYI,EAAIG,QAAQE,aAAlB,KAAqC,SAInF,CAACT,EAAQL,EAAMZ,eAWjB,OACI,oCACI,wBAAIQ,UAAS,mBAAoBI,EAAMZ,aAAe,wBAA0B,IAAnE,IAAyEY,EAAMJ,WACxF,wBAAIA,UAAS,iBAAoBC,MAAO,CAACkB,gBAAgB,IAAIf,EAAMgB,MAAQhB,EAAMgB,MAAQ,QACrF,kBAAC,IAAD,CAAMC,GAAIjB,EAAMP,QACZ,yBAAKG,UAAU,oBACVI,EAAMC,YAIlBD,EAAMZ,aACH,wBAAIQ,UAAU,oBACV,4BACIA,UAAS,kBAAmBS,EAAS,wBAA0B,IAC/Da,QAvBJ,WAEhB,GADAZ,GAAU,SAAAa,GAAI,OAAKA,KACfd,EAEG,CACH,IAAMe,EAAaC,iBAAiBZ,EAAIG,SAASU,mBACjDC,YAAW,kBAAMf,GAAmB,KAAiC,IAAzBgB,WAAWJ,SAHvDZ,GAAmB,IAqBHiB,aAAW,eACd,uBAAG7B,UAAU,wBAEpB,MAELI,EAAMZ,aACH,wBAAIQ,UAAU,oBACV,wBAAIA,UAAU,mBAAmB8B,QAAS,GACtC,yBAAK9B,UAAS,wBAAyBS,EAAS,qBAAuB,IAAMI,IAAKA,GAC9E,2BAAOb,UAAU,eACb,+BACKW,EAAkBP,EAAMZ,aAAe,UAM9D","file":"component---src-pages-oferta-js-c9c11133e1173c872e58.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport { OfertTable, OfertTableRow} from \"../components/ofertTable\"\r\n\r\nconst oferta = ({ data }) => {\r\n\r\n  const groupServices = data.allServiceGroupsJson.edges.map(edge => edge.node)\r\n  \r\n  const services = (serviceGroupSlug) => {\r\n    const servicesList = data.allServicesJson.nodes.map((service, index) => {\r\n      if (service.group === serviceGroupSlug){\r\n        return (\r\n          <OfertTableRow linkTo={`/service/${service.slug}`} key={service.slug + index}>\r\n            {service.name}\r\n          </OfertTableRow>\r\n        )\r\n      }\r\n      return null\r\n    })\r\n    \r\n    return (\r\n      <>\r\n        {servicesList}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const groupServicesList = groupServices.map(({ name, slug }, index) => {\r\n    const innerContent = services(slug)\r\n\r\n    return (\r\n      <OfertTableRow linkTo={`/serviceGroup/${slug}`} innerContent={innerContent} key={index + slug}>\r\n        {name}\r\n      </OfertTableRow>\r\n    )\r\n  })\r\n\r\n  return(\r\n    <Layout activePage=\"oferta\">\r\n        <div className=\"main-container-text\">\r\n          <h1>Oferta</h1>\r\n          <p>Wybierz kategorię, aby dowiedzieć się więcej o zabiegach. Jeżeli nie wiesz jaki zabieg jest najlepszy dla Ciebie, to zadzwoń i umów się na darmową konsultację!</p>\r\n          <OfertTable style={{maxWidth: \"300px\"}}>\r\n            {groupServicesList}\r\n          </OfertTable>\r\n        </div>\r\n      </Layout>\r\n\r\n    )\r\n}\r\n\r\nexport default oferta\r\n\r\nexport const data = graphql`\r\nquery {\r\n  allServiceGroupsJson {\r\n    edges {\r\n      node {\r\n        slug\r\n        name\r\n      }\r\n    }\r\n  }\r\n  allServicesJson{\r\n    nodes {\r\n      name\r\n      prize\r\n      slug\r\n      time\r\n      description1\r\n      group\r\n    }\r\n  }\r\n}\r\n`","import React, { useLayoutEffect } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nexport const OfertTable = (props) => {\r\n    return (\r\n        <div className=\"ofert-table\">\r\n            <table>\r\n                <tbody>\r\n                    {props.children}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const OfertTableRow = (props) => {\r\n\r\n    const [isOpen, setIsOpen] = React.useState(false)\r\n    const [isContentActive, setIsContentActive] = React.useState(false)\r\n\r\n    const ref = React.useRef(null)\r\n\r\n    useLayoutEffect(() => {\r\n        if (props.innerContent){\r\n            const setInnerHeight = () => {\r\n                ref.current.style.maxHeight = isOpen ? `${ref.current.scrollHeight}px` : \"0px\"\r\n            }\r\n            setInnerHeight()        \r\n        }\r\n    },[isOpen, props.innerContent])\r\n\r\n    const handleClick = () => {\r\n        setIsOpen(prev => !prev)\r\n        if(!isOpen){\r\n            setIsContentActive(true)\r\n        } else {\r\n            const drawerTime = getComputedStyle(ref.current).transitionDuration\r\n            setTimeout(() => setIsContentActive(false), parseFloat(drawerTime) * 1000)\r\n        } \r\n    }\r\n    return (\r\n        <>\r\n            <tr className={`ofert-table-tr ${props.innerContent ? \"ofert-table-tr-header\" : \"\"} ${props.className}`}>\r\n                <td className={`ofert-table-td`} style={{backgroundColor: `${props.color ? props.color : null}`}}>{/* style={{backgroundColor: props.color, padding: `10px 10px 10px ${indent ? indent : 20}px`}} */}\r\n                    <Link to={props.linkTo}>\r\n                        <div className=\"ofert-table-link\">\r\n                            {props.children}\r\n                        </div>\r\n                    </Link>\r\n                </td>\r\n                {props.innerContent ? \r\n                    <td className=\"drawer-button-td\">\r\n                        <button \r\n                            className={`drawer-button ${isOpen ? \"drawer-button-rotated\" : \"\"}`}\r\n                            onClick={handleClick}\r\n                            aria-label=\"open drawer\"\r\n                        ><i className=\"fas fa-caret-down\"></i></button>\r\n                    </td>\r\n                : null}\r\n            </tr>\r\n            {props.innerContent ?\r\n                <tr className=\"inner-content-tr\">\r\n                    <td className=\"inner-content-td\" colSpan={2}>\r\n                        <div className={`inner-content-close ${isOpen ? \"inner-content-open\" : \"\"}`} ref={ref}>\r\n                            <table className=\"inner-table\">\r\n                                <tbody>\r\n                                    {isContentActive ? props.innerContent : null}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            : null}\r\n        </>\r\n    )\r\n}"],"sourceRoot":""}